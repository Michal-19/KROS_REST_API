// <auto-generated />
using System;
using KROS_REST_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KROS_REST_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KROS_REST_API.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DirectorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentChiefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentChiefId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionChiefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DivisionChiefId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectChiefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("ProjectChiefId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Company", b =>
                {
                    b.HasOne("KROS_REST_API.Models.Employee", "Director")
                        .WithMany("CompaniesChief")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Director");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Department", b =>
                {
                    b.HasOne("KROS_REST_API.Models.Employee", "DepartmentChief")
                        .WithMany("DepartmentsChief")
                        .HasForeignKey("DepartmentChiefId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KROS_REST_API.Models.Project", "Project")
                        .WithMany("Departments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentChief");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Division", b =>
                {
                    b.HasOne("KROS_REST_API.Models.Company", "Company")
                        .WithMany("Divisions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KROS_REST_API.Models.Employee", "DivisionChief")
                        .WithMany("DivisionsChief")
                        .HasForeignKey("DivisionChiefId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");

                    b.Navigation("DivisionChief");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Project", b =>
                {
                    b.HasOne("KROS_REST_API.Models.Division", "Division")
                        .WithMany("Projects")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KROS_REST_API.Models.Employee", "ProjectChief")
                        .WithMany("ProjectsChief")
                        .HasForeignKey("ProjectChiefId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Division");

                    b.Navigation("ProjectChief");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Company", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Division", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Employee", b =>
                {
                    b.Navigation("CompaniesChief");

                    b.Navigation("DepartmentsChief");

                    b.Navigation("DivisionsChief");

                    b.Navigation("ProjectsChief");
                });

            modelBuilder.Entity("KROS_REST_API.Models.Project", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
